{"ast":null,"code":"var _jsxFileName = \"/Users/jalamangjankagmail.com/8-0/module-6/Miru/front-end/src/components/Comments.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { Comment } from \"./Comment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Comments() {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const API = process.env.REACT_APP_API_URL;\n  const [comments, setComments] = useState([]);\n  const [editedCommentId, setEditedCommentId] = useState(null);\n  const [newComment, setNewComment] = useState(\"\");\n  const [comment, setComment] = useState({\n    // activity_id: `${id}`,\n    name: \"\",\n    comment: \"\"\n  }); // fetching all comments\n\n  useEffect(() => {\n    handleLoad();\n  }, []);\n\n  const handleLoad = () => {\n    axios.get(`${API}/activity/${id}/comments`).then(response => {\n      console.log(response.data);\n      setComments(response.data);\n    }).catch(error => console.warn(error));\n  }; //saves input text typed by the user to the state\n\n\n  const handleTextChange = event => {\n    setComment({ ...comment,\n      [event.target.id]: event.target.value\n    });\n  }; // submits new comment to backend\n\n\n  const onSubmit = event => {\n    event.preventDefault();\n    axios.post(`${API}/activity/${id}/comments`, comment).then(response => {\n      handleLoad();\n    }).catch(error => console.warn(error));\n    setComment({\n      name: \"\",\n      comment: \"\"\n    });\n  }; // submits edited comment to backend\n\n\n  const handleEditSubmit = comment => {\n    axios.put(`${API}/activity/${id}/comments/${editedCommentId}`, comment).then(response => {\n      if (response.data.id) {\n        setEditedCommentId(null);\n        handleLoad();\n      } else {\n        alert(\"must include input\");\n      }\n    });\n  }; // delete comment\n\n\n  const handleDelete = idOfDeleted => {\n    axios.delete(`${API}/activity/${id}/comments/${idOfDeleted}`).then(response => {\n      handleLoad();\n    }).catch(error => console.warn(error));\n  }; //toggles view between comment/buttons and textarea\n\n\n  const handleCommentEdit = comment => {\n    setEditedCommentId(comment.id);\n  };\n\n  const handleCancelCommentEdit = comment => {\n    setEditedCommentId(null);\n  }; // returns a all comments\n\n\n  const allComments = comments.map(comment => {\n    return /*#__PURE__*/_jsxDEV(Comment, {\n      comment: comment,\n      edit: editedCommentId === comment.id,\n      onEditFn: handleCommentEdit,\n      onCancelFn: handleCancelCommentEdit,\n      onEditSubmit: handleEditSubmit,\n      onDeleteFn: handleDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this);\n  }); // New comment inputs\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"CommentSection\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"CommentForm\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"UserName\",\n          children: \" Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"name\",\n          value: comment.name,\n          type: \"text\",\n          onChange: handleTextChange,\n          placeholder: \"User Name\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"Comment\",\n          children: \"Comment:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"comment\",\n          value: comment.comment,\n          type: \"textarea\",\n          onChange: handleTextChange,\n          placeholder: \"Comment...\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), allComments]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Comments, \"vxCbHnjSzvb/iXOvYOB5PhPlnK8=\", false, function () {\n  return [useParams];\n});\n\n_c = Comments;\nexport default Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["axios","useState","useEffect","useParams","useNavigate","Comment","Comments","id","API","process","env","REACT_APP_API_URL","comments","setComments","editedCommentId","setEditedCommentId","newComment","setNewComment","comment","setComment","name","handleLoad","get","then","response","console","log","data","catch","error","warn","handleTextChange","event","target","value","onSubmit","preventDefault","post","handleEditSubmit","put","alert","handleDelete","idOfDeleted","delete","handleCommentEdit","handleCancelCommentEdit","allComments","map"],"sources":["/Users/jalamangjankagmail.com/8-0/module-6/Miru/front-end/src/components/Comments.js"],"sourcesContent":["import axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { Comment } from \"./Comment\";\n\nfunction Comments() {\n  const { id } = useParams();\n\n  const API = process.env.REACT_APP_API_URL;\n\n  const [comments, setComments] = useState([]);\n  const [editedCommentId, setEditedCommentId] = useState(null);\n  const [newComment, setNewComment] = useState(\"\");\n  const [comment, setComment] = useState({\n    // activity_id: `${id}`,\n    name: \"\",\n    comment: \"\",\n  });\n\n  // fetching all comments\n  useEffect(() => {\n    handleLoad();\n  }, []);\n\n  const handleLoad = () => {\n    axios\n      .get(`${API}/activity/${id}/comments`)\n      .then((response) => {\n        console.log(response.data);\n        setComments(response.data);\n      })\n\n      .catch((error) => console.warn(error));\n  };\n\n  //saves input text typed by the user to the state\n  const handleTextChange = (event) => {\n    setComment({ ...comment, [event.target.id]: event.target.value });\n  };\n\n  // submits new comment to backend\n  const onSubmit = (event) => {\n    event.preventDefault();\n    axios\n      .post(`${API}/activity/${id}/comments`, comment)\n      .then((response) => {\n        handleLoad();\n      })\n      .catch((error) => console.warn(error));\n\n    setComment({\n      name: \"\",\n      comment: \"\",\n    });\n  };\n\n  // submits edited comment to backend\n  const handleEditSubmit = (comment) => {\n    axios.put(`${API}/activity/${id}/comments/${editedCommentId}`, comment).then((response) => {\n      if (response.data.id) {\n        setEditedCommentId(null);\n        handleLoad();\n      } else {\n        alert(\"must include input\");\n      }\n    });\n  };\n\n  // delete comment\n  const handleDelete = (idOfDeleted) => {\n    axios\n      .delete(`${API}/activity/${id}/comments/${idOfDeleted}`)\n      .then((response) => {\n        handleLoad();\n      })\n\n      .catch((error) => console.warn(error));\n  };\n\n  //toggles view between comment/buttons and textarea\n  const handleCommentEdit = (comment) => {\n    setEditedCommentId(comment.id);\n  };\n\n  const handleCancelCommentEdit = (comment) => {\n    setEditedCommentId(null);\n  };\n\n  // returns a all comments\n  const allComments = comments.map((comment) => {\n    return (\n      <Comment\n        comment={comment}\n        edit={editedCommentId === comment.id}\n        onEditFn={handleCommentEdit}\n        onCancelFn={handleCancelCommentEdit}\n        onEditSubmit={handleEditSubmit}\n        onDeleteFn={handleDelete}\n      />\n    );\n  });\n  // New comment inputs\n  return (\n    <div className=\"CommentSection\">\n      <div className=\"CommentForm\">\n        <form onSubmit={onSubmit}>\n          <label htmlFor=\"UserName\"> Name:</label>\n          <input\n            id=\"name\"\n            value={comment.name}\n            type=\"text\"\n            onChange={handleTextChange}\n            placeholder=\"User Name\"\n            required\n          />\n\n          <label htmlFor=\"Comment\">Comment:</label>\n          <input\n            id=\"comment\"\n            value={comment.comment}\n            type=\"textarea\"\n            onChange={handleTextChange}\n            placeholder=\"Comment...\"\n            required\n          />\n          <button type=\"submit\">Submit</button>\n        </form>\n      </div>\n      {allComments}\n    </div>\n  );\n}\n\nexport default Comments;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}