{"ast":null,"code":"var _jsxFileName = \"/Users/jalamangjankagmail.com/8-0/module-6/Miru/front-end/src/components/Comments.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { instance } from \"../helpers/api\";\nimport { Comment } from \"./Comment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Comments() {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const API = process.env.REACT_APP_API_URL;\n  const [comments, setComments] = useState([]);\n  const [editedCommentId, setEditedCommentId] = useState(null);\n  const [comment, setComment] = useState({\n    // activity_id: `${id}`,\n    name: \"\",\n    comment: \"\"\n  }); // fetching all comments\n\n  useEffect(() => {\n    handleLoad();\n  }, []);\n\n  const handleLoad = () => {\n    instance.get(`${API}/activity/${id}/comments`).then(response => {\n      setComments(response.data);\n    }).catch(error => console.warn(error));\n  }; //saves input text typed by the user to the state\n\n\n  const handleTextChange = event => {\n    setComment({ ...comment,\n      [event.target.id]: event.target.value\n    });\n  }; // submits new comment to backend\n\n\n  const onSubmit = event => {\n    event.preventDefault();\n    instance.post(`${API}/activity/${id}/comments`, comment).then(response => {\n      handleLoad();\n    }).catch(error => console.warn(error));\n    setComment({\n      name: \"\",\n      comment: \"\"\n    });\n  }; // submits edited comment to backend\n\n\n  const handleEditSubmit = comment => {\n    instance.put(`${API}/activity/${id}/comments/${editedCommentId}`, comment).then(response => {\n      if (response.data.id) {\n        setEditedCommentId(null);\n        handleLoad();\n      } else {\n        alert(\"must include input\");\n      }\n    });\n  }; // delete comment\n\n\n  const handleDelete = idOfDeleted => {\n    instance.delete(`${API}/activity/${id}/comments/${idOfDeleted}`).then(response => {\n      handleLoad();\n    }).catch(error => console.warn(error));\n  }; //toggles view between comment/buttons and textarea\n\n\n  const handleCommentEdit = comment => {\n    setEditedCommentId(comment.id);\n  };\n\n  const handleCancelCommentEdit = comment => {\n    setEditedCommentId(null);\n  }; // returns a all comments\n\n\n  const allComments = comments.map(comment => {\n    return /*#__PURE__*/_jsxDEV(Comment, {\n      comment: comment,\n      edit: editedCommentId === comment.id,\n      onEditFn: handleCommentEdit,\n      onCancelFn: handleCancelCommentEdit,\n      onEditSubmit: handleEditSubmit,\n      onDeleteFn: handleDelete\n    }, comment.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this);\n  }); // New comment inputs\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"CommentSection\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"CommentForm\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"UserName\",\n          children: \" Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"name\",\n          value: comment.name,\n          type: \"text\",\n          onChange: handleTextChange,\n          placeholder: \"User Name\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"Comment\",\n          children: \"Comment:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"comment\",\n          value: comment.context,\n          type: \"textarea\",\n          onChange: handleTextChange,\n          placeholder: \"Comment...\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), allComments]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Comments, \"i3tv4ZbO9E0++Chp5mFp13aX+Gw=\", false, function () {\n  return [useParams];\n});\n\n_c = Comments;\nexport default Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["useState","useEffect","useParams","instance","Comment","Comments","id","API","process","env","REACT_APP_API_URL","comments","setComments","editedCommentId","setEditedCommentId","comment","setComment","name","handleLoad","get","then","response","data","catch","error","console","warn","handleTextChange","event","target","value","onSubmit","preventDefault","post","handleEditSubmit","put","alert","handleDelete","idOfDeleted","delete","handleCommentEdit","handleCancelCommentEdit","allComments","map","context"],"sources":["/Users/jalamangjankagmail.com/8-0/module-6/Miru/front-end/src/components/Comments.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { instance } from \"../helpers/api\";\nimport { Comment } from \"./Comment\";\n\nfunction Comments() {\n  const { id } = useParams();\n\n  const API = process.env.REACT_APP_API_URL;\n\n  const [comments, setComments] = useState([]);\n  const [editedCommentId, setEditedCommentId] = useState(null);\n  const [comment, setComment] = useState({\n    // activity_id: `${id}`,\n    name: \"\",\n    comment: \"\",\n  });\n\n  // fetching all comments\n  useEffect(() => {\n    handleLoad();\n  }, []);\n\n  const handleLoad = () => {\n    instance\n      .get(`${API}/activity/${id}/comments`)\n      .then((response) => {\n        setComments(response.data);\n      })\n\n      .catch((error) => console.warn(error));\n  };\n\n  //saves input text typed by the user to the state\n  const handleTextChange = (event) => {\n    setComment({ ...comment, [event.target.id]: event.target.value });\n  };\n\n  // submits new comment to backend\n  const onSubmit = (event) => {\n    event.preventDefault();\n    instance\n      .post(`${API}/activity/${id}/comments`, comment)\n      .then((response) => {\n        handleLoad();\n      })\n      .catch((error) => console.warn(error));\n\n    setComment({\n      name: \"\",\n      comment: \"\",\n    });\n  };\n\n  // submits edited comment to backend\n  const handleEditSubmit = (comment) => {\n    instance.put(`${API}/activity/${id}/comments/${editedCommentId}`, comment).then((response) => {\n      if (response.data.id) {\n        setEditedCommentId(null);\n        handleLoad();\n      } else {\n        alert(\"must include input\");\n      }\n    });\n  };\n\n  // delete comment\n  const handleDelete = (idOfDeleted) => {\n    instance\n      .delete(`${API}/activity/${id}/comments/${idOfDeleted}`)\n      .then((response) => {\n        handleLoad();\n      })\n\n      .catch((error) => console.warn(error));\n  };\n\n  //toggles view between comment/buttons and textarea\n  const handleCommentEdit = (comment) => {\n    setEditedCommentId(comment.id);\n  };\n\n  const handleCancelCommentEdit = (comment) => {\n    setEditedCommentId(null);\n  };\n\n  // returns a all comments\n  const allComments = comments.map((comment) => {\n    return (\n      <Comment\n        key={comment.id}\n        comment={comment}\n        edit={editedCommentId === comment.id}\n        onEditFn={handleCommentEdit}\n        onCancelFn={handleCancelCommentEdit}\n        onEditSubmit={handleEditSubmit}\n        onDeleteFn={handleDelete}\n      />\n    );\n  });\n  // New comment inputs\n  return (\n    <div className=\"CommentSection\">\n      <div className=\"CommentForm\">\n        <form onSubmit={onSubmit}>\n          <label htmlFor=\"UserName\"> Name:</label>\n          <input\n            id=\"name\"\n            value={comment.name}\n            type=\"text\"\n            onChange={handleTextChange}\n            placeholder=\"User Name\"\n            required\n          />\n\n          <label htmlFor=\"Comment\">Comment:</label>\n          <input\n            id=\"comment\"\n            value={comment.context}\n            type=\"textarea\"\n            onChange={handleTextChange}\n            placeholder=\"Comment...\"\n            required\n          />\n          <button type=\"submit\">Submit</button>\n        </form>\n      </div>\n      {allComments}\n    </div>\n  );\n}\n\nexport default Comments;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}